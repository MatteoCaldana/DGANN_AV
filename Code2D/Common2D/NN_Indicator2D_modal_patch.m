function [ind] = NN_Indicator2D_modal_patch(Q)

Globals2D_DG;
Globals2D_MLP;


% Get Neighbours
E1 = EToE(:,1)'; E2 = EToE(:,2)'; E3 = EToE(:,3)';

% Get modal coefficients of patch
Qm0 = invV*Q; Qm1 = invV*Q(:,E1); Qm2 = invV*Q(:,E2); Qm3 = invV*Q(:,E3);

% Filter out constants
F_EPS    = 1e-2;
Mval     = max(Q); 
mval     = min(Q);
ncon_ind = find(abs(Mval-mval) > F_EPS*max(abs(Mval),abs(mval)));  % Get indices of non-constant data
% mval     = max(abs(Qm0(2:end,:)));
% ncon_ind = find(mval > F_EPS);  % Get indices of non-constant data
% X      = [Qm0(:,ncon_ind); Qm1(:,ncon_ind); Qm2(:,ncon_ind); Qm3(:,ncon_ind)];
p1_ind = [1,2,N+2];
X      = [Qm0(p1_ind,ncon_ind); Qm1(p1_ind,ncon_ind); Qm2(p1_ind,ncon_ind); Qm3(p1_ind,ncon_ind)];


% [m,n]   = size(X);
% eps1     = 1.0e-12;
% eps2     = 1.0e-6;
% X_in    = X;
% Mx      = max(X(1:7,:));
% mx      = min(X(1:7,:));
% Dif     = Mx - mx;
% Sum     = Mx + mx;
% Abs     = max(abs(X(1:7,:)));
% QQ      = 1*(abs(Dif)>eps2*Abs);
% 
% xavg = AVG2D*x;
% yavg = AVG2D*y;
% 
% figure(1000)
% subplot(5,2,1)
% plot3(xavg,yavg,QQ,'.')
% subplot(5,2,2)
% plot3(xavg,yavg,AVG0,'.')
% subplot(5,2,3)
% plot3(xavg,yavg,AVG1,'.')
% subplot(5,2,4)
% plot3(xavg,yavg,AVG2,'.')
% subplot(5,2,5)
% plot3(xavg,yavg,AVG3,'.')
% subplot(5,2,6)
% plot3(xavg,yavg,QCF1,'.')
% subplot(5,2,7)
% plot3(xavg,yavg,QCF2,'.')
% subplot(5,2,8)
% plot3(xavg,yavg,QCF3,'.')
% subplot(5,2,9)
% plot3(xavg,yavg,Dif,'.')
% subplot(5,2,10)
% plot3(xavg,yavg,Abs,'.')
% pause(1)


% XX = [ones(7,1),-1*ones(7,1)]

% XX =[0.14577,0.051677,0.064875,0.28786,0.098721,0.10964,0.22893,0.89443,0.89443;
% 0.35771,0.28786,0.30106,0.40005,0.32278,0.33371,0.41663,0.89443,0.89443;
% 0.39439,0.40005,0.41325,0.29377,0.39722,0.40814,0.37781,0.89443,0.89443;
% 0.22064,0.29377,0.30696,0.040805,0.25721,0.26813,0.1366,0.89443,0.89443;
% -0.044068,0.040805,0.054003,-0.19372,-0.0016311,0.0092908,-0.13986,0.89443,0.89443;
% -0.23666,-0.19372,-0.18053,-0.29312,-0.21519,-0.20427,-0.29052,0.89443,0.89443;
% -0.2848,-0.29312,-0.27993,-0.27237,-0.28896,-0.27804,-0.2874,0.89443,0.89443;
% -0.24642,-0.27237,-0.25917,-0.23503,-0.25939,-0.24847,-0.23139,0.89443,0.89443;
% -0.22775,-0.23503,-0.22183,-0.2537,-0.23139,-0.22047,-0.23139,0.89443,0.89443;
% -0.26509,-0.2537,-0.2405,-0.29208,-0.25939,-0.24847,-0.2874,0.89443,0.89443;
% -0.28584,-0.29208,-0.27888,-0.24394,-0.28896,-0.27804,-0.29052,0.89443,0.89443;
% -0.18644,-0.24394,-0.23075,-0.051349,-0.21519,-0.20427,-0.13986,0.89443,0.89443;
% 0.048087,-0.051349,-0.038152,0.21336,-0.0016311,0.0092908,0.1366,0.89443,0.89443;
% 0.30105,0.21336,0.22656,0.38711,0.25721,0.26813,0.37781,0.89443,0.89443;
% 0.40733,0.38711,0.40031,0.35043,0.39722,0.40814,0.41663,0.89443,0.89443;
% 0.29514,0.35043,0.36362,0.13848,0.32278,0.33371,0.22893,0.89443,0.89443;
% 0.058959,0.13848,0.15168,-0.075003,0.098721,0.10964,-0.031489,0.89443,0.89443;
% -0.063171,-0.10168,-0.11287,0.064875,-0.082425,-0.084473,-0.022615,0.89443,0.89443;
% 0.064875,-0.063171,0.15032,0.14577,-0.022615,0.1076,0.10964,0.89443,0.89443;
% 0.15032,0.064875,0.053682,0.30106,0.1076,0.10555,0.23781,0.89443,0.89443;
% 0.30106,0.15032,0.36226,0.35771,0.23781,0.33166,0.33371,0.89443,0.89443;
% 0.36226,0.30106,0.28986,0.41325,0.33166,0.32961,0.42551,0.89443,0.89443;
% 0.41325,0.36226,0.39894,0.39439,0.42551,0.4061,0.40814,0.89443,0.89443;
% 0.39894,0.41325,0.40206,0.30696,0.4061,0.40405,0.38668,0.89443,0.89443;
% 0.30696,0.39894,0.2252,0.22064,0.38668,0.26608,0.26813,0.89443,0.89443;
% 0.2252,0.30696,0.29577,0.054003,0.26608,0.26403,0.14547,0.89443,0.89443;
% 0.054003,0.2252,-0.039517,-0.044068,0.14547,0.0072431,0.0092908,0.89443,0.89443;
% -0.039517,0.054003,0.04281,-0.18053,0.0072431,0.0051953,-0.13099,0.89443,0.89443;
% -0.18053,-0.039517,-0.23211,-0.23666,-0.13099,-0.20632,-0.20427,0.89443,0.89443;
% -0.23211,-0.18053,-0.19172,-0.27993,-0.20632,-0.20837,-0.28165,0.89443,0.89443;
% -0.27993,-0.23211,-0.28025,-0.2848,-0.28165,-0.28009,-0.27804,0.89443,0.89443;
% -0.28025,-0.27993,-0.29112,-0.25917,-0.28009,-0.28214,-0.27853,0.89443,0.89443;
% -0.25917,-0.28025,-0.24187,-0.24642,-0.27853,-0.25052,-0.24847,0.89443,0.89443;
% -0.24187,-0.25917,-0.27037,-0.22183,-0.25052,-0.25257,-0.22251,0.89443,0.89443;
% -0.22183,-0.24187,-0.2232,-0.22775,-0.22251,-0.22251,-0.22047,0.89443,0.89443]'
% 
% bcc  = ind_MLP2D(XX,n_input,n_output,n_hidden_layer,leaky_alpha,WEIGHTS,BIASES)
% find(bcc > 0.5)
% pause(10)
% 


bc_prob = zeros(1,K);
bc_prob(ncon_ind) = ind_MLP2D(X,n_input,n_output,n_hidden_layer,leaky_alpha,WEIGHTS,BIASES);

ind = find(bc_prob > 0.5);


return;
